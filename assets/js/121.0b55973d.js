(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{535:function(t,n,e){"use strict";e.r(n);var a=e(2),r=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[n("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/896827951938304",target:"_blank",rel:"noopener noreferrer"}},[t._v("git参考学习文档"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"_1创建版本库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1创建版本库"}},[t._v("#")]),t._v(" 1创建版本库")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('git init\n\ngit add test.txt  /  git add . //添加到暂存区\n\ngit commit -m "first commit" // 暂存区内容提交到当前分支\n')])])]),n("h3",{attrs:{id:"_2-版本回退"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-版本回退"}},[t._v("#")]),t._v(" 2 版本回退")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("git log / git log --pretty=oneline\n\ngit reset --hard HEAD^//回退到上一个版本\n\ngit reset --hard id //id是git log 里面对应版本的id\n\n你回退到了某个版本，关掉了电脑，第二天早上就后悔了，想恢复到新版本怎么办？找不到新版本的commit id怎么办？\n\ngit reflog //记录每一条命令\n")])])]),n("h3",{attrs:{id:"_3-撤销修改"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-撤销修改"}},[t._v("#")]),t._v(" 3 撤销修改")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("git status //查看状态\n\ngit checkout -- readme.txt\n")])])]),n("h3",{attrs:{id:"_4-删除文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除文件"}},[t._v("#")]),t._v(" 4 删除文件")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("git rm text.txt\n\n误删了又可以用 git checkout -- text.txt\n")])])]),n("h3",{attrs:{id:"_5-远程分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-远程分支"}},[t._v("#")]),t._v(" 5 远程分支")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("git remote -v //查看当前远程库信息\n\ngit remote rm origin //移除\n\n要关联一个远程库 git remote add origin git@server-name:path/repo-name.git\n")])])]),n("h3",{attrs:{id:"_6-分支管理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-分支管理"}},[t._v("#")]),t._v(" 6 分支管理")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('git checkout -b dev //创建dev分支，并切换到dev，可以分解为：git branch dev + git switch dev\n\ngit branch //列出所有分支\n\ngit add . \n\ngit commit -m "提交内容到dev分支"\n\ngit checkout master //查看master 并没有刚刚commit 的内容，那是因为提交的内容在dev上\n\ngit merge dev //合并指定分支到当前分支\n\ngit branch -d dev //删除分支\n\ngit switch -c dev //分支切换 git switch master\n\n//修改远程仓库地址\ngit remote set-url origin https://gitee.com/lichengcan0228/mall4cloud.git\n\n')])])]),n("h3",{attrs:{id:"_7-gitignore常用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-gitignore常用"}},[t._v("#")]),t._v(" 7 .gitignore常用")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("#======================================================================================================================\n#=========================================          gitignore的基础用法         =========================================\n#======================================================================================================================\n#  一.基础语法\n#    .gitignore配置文件的一些通用技巧 [参考:https://git-scm.com/docs/gitignore]\n#     1.空白行不匹配任何文件,所以可以作为可读性的分隔符,同时两端的空格将会被忽略.\n#     2.使用[#]开头,将会注释掉整行,使其不进行匹配操作,如果需要匹配#开头,可以使用转义字符[\\].\n#     3.1匹配模式以[/]结尾,表示想要匹配一个目录及其子文件.(比如[foo/]会匹配foo目录及其下面的路径.)\n#     3.2匹配模式不包含[/],将会全局匹配该文件.\n#     4.通配符\n#       [*]:  匹配除[/]以外的任何内容,也就意味着[*]不能跨目录.\n#       [?]:  匹配除[/]和[[]以及[]]以外的任何一个字符.\n#       [**]: 匹配所有的内容,或者说匹配任意目录下的内容.\n#         示例:\n#           1.[**/foo/bar]  将会匹配所有直接在foo目录下的bar,无论foo处在何处.\n#           2.[foo/**]则表示匹配foo目录下的所有文件和目录.\n#           3.[a/**/b]则可以匹配a/b, a/c/b, a/c/d/b,即此处的[**]可以表示0个或多个.\n#           !!! 需要注意的是,除上面示例的用法外,剩余的[**]都是无效的..\n#     5.可以通过前缀[!]来表示不忽略某些文件,比如可以通过[!a]来确保文件a不会被忽略,即时前面已经声明了忽略其父目录,该模式优先级高于普通忽略模式.\n#  二.常用命令\n#    1.git -rm  [https://git-scm.com/docs/git-rm]\n#      删除文件索引,或者同时删除文件索引和物理文件.可以使用通配符.\n#    2.git-check-ignore [https://git-scm.com/docs/git-check-ignore]\n#      调试.gitignore文件\n#  三.注意事项\n#    1.如果文件已经被git管理,那么后续添加的忽略模式将不会生效,具体解决方法,参考<<二.常用命令>>.\n\n#=======================================================================================================================\n#==============================               java忽略文件                           =====================================\n#=====================         https://github.com/github/gitignore/blob/master/Java.gitignore         ==================\n#=======================================================================================================================\n# 编译后的class文件,忽略所有以[.class]结尾的文件\n*.class\n\n# 日志文件,忽略所有以[.log]结尾的文件.\n*.log\n\n# BlueJ 文件,忽略所有以[.ctxt]结尾的文件.\n*.ctxt\n\n# Mobile Tools for Java (J2ME),忽略[.mtj.tmp/]目录及其子文件.\n.mtj.tmp/\n\n# 打包文件,忽略所有以[.jar]或[.war]或[.nar]或[.ear]或[.zip]或[.tar.gz]或[rar]结尾的文件.\n*.jar\n*.war\n*.nar\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n# 虚拟机崩溃日志,忽略所有以[hs_err_pid]开头的文件.[see http://www.java.com/en/download/help/error_hotspot.xml]\nhs_err_pid*\n#=======================================================================================================================\n#==============================               maven忽略文件                           ===================================\n#=====================         https://github.com/github/gitignore/blob/master/Maven.gitignore        ==================\n#=======================================================================================================================\ntarget/\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\ndependency-reduced-pom.xml\nbuildNumber.properties\n.mvn/timing.properties\n# Avoid ignoring Maven wrapper jar file (.jar files are usually ignored)\n!/.mvn/wrapper/maven-wrapper.jar\n#=======================================================================================================================\n#==============================               IDE环境忽略文件                           ==================================\n#=====================         https://github.com/github/gitignore/blob/master/Maven.gitignore        ==================\n#=======================================================================================================================\n#----------------IDEA-------------\n.idea/*\n.idea/compiler.xml\n.idea/encodings.xml\n.idea/modules.xml\n*.iml\n#=======================================================================================================================\n#==============================               other环境忽略文件                           ================================\n#=====================         https://github.com/github/gitignore/blob/master/Maven.gitignore        ==================\n#=======================================================================================================================\n*.sw?\n.#*\n*#\n*~\n.classpath\n.project\n.settings/\nbin\nbuild\ntarget\ndependency-reduced-pom.xml\n*.sublime-*\n/scratch\n.gradle\nGuardfile\nREADME.html\n*.iml\n.idea\n\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);