(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{456:function(e,t,n){"use strict";n.r(t);var s=n(2),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"_1-过滤器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-过滤器"}},[e._v("#")]),e._v(" 1 过滤器")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\npublic class CrossFilter implements Filter {\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n        // do nothing\n    }\n\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        HttpServletResponse response = (HttpServletResponse) servletResponse;\n        response.setHeader("Access-Control-Allow-Origin", "*");\n        response.setHeader("Access-Control-Allow-Methods", "*");\n        response.setHeader("Access-Control-Allow-Headers", "Origin, No-Cache, X-Requested-With, Cache-Control, Content-Type,Authorization");\n        response.setHeader("Access-Control-Max-Age", "600");\n\n        HttpServletRequest request = (HttpServletRequest) servletRequest;\n        if (request.getMethod().equals("OPTIONS")) {\n            response.setStatus(204);\n            return;\n        }\n\n        filterChain.doFilter(servletRequest, servletResponse);\n\n        response.setCharacterEncoding("UTF-8");\n        response.setContentType("application/json; charset=utf-8");\n    }\n\n    @Override\n    public void destroy() {\n        // do nothing\n    }\n}\n')])])]),t("h3",{attrs:{id:"_2-webmvc配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-webmvc配置"}},[e._v("#")]),e._v(" 2 webMVC配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n\n    /**\n     * 注册跨域过滤器\n     *\n     * @return\n     */\n    @Bean("registerCrossFilter")\n    public FilterRegistrationBean registerCrossFilter() {\n        FilterRegistrationBean registration = new FilterRegistrationBean();\n        registration.setFilter(new CrossFilter());\n        registration.addUrlPatterns("/*");\n        registration.setOrder(1);\n\n        return registration;\n    }\n\n\n\n}\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);