(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{581:function(n,t,a){"use strict";a.r(t);var e=a(2),s=Object(e.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"_1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1"}},[n._v("#")]),n._v(" 1")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n在寻址方式中，将操作数的地址放在寄存器中的方式称为（ ）。\n \n  A.  直接寻址\n \n  B.  间接寻址\n \n  C.  寄存器寻址\n \n  D.  寄存器间接寻址\n  \n  将操作数的地址放在寄存器中的方式称为寄存器寻址。在寄存器寻址方式中，操作数的地址保存在寄存器中，指令通过访问该寄存器来获取操作数的值。\n\n使用寄存器寻址可以有效地减少内存访问次数，提高程序的执行效率。通常情况下，寄存器寻址是 CPU 中最快的一种寻址方式，因为它不需要访问内存，而是直接通过访问寄存器来获取操作数的值。\n\n在寄存器寻址方式中，通常会使用一些特殊的寄存器来保存操作数的地址，例如基址寄存器和偏移量寄存器。基址寄存器用于保存操作数的起始地址，而偏移量寄存器则用于保存操作数相对于基址的偏移量，通过这两个寄存器的组合，可以实现对任意地址的访问。\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" \n（ ）是使用电容存储信息且需要周期性地进行刷新的存储器。\n \n \n  A.  ROM\n \n  B.  DRAM\n \n  C.  EPROM\n \n  D.  SRAM\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("（14）是构成我国保护计算机软件著作权的两个基本法律文件。单个自然人的软件著作权保护期为（15）。\n \n \n  A.  50年\n \n  B.  自然人终生及其死亡后50年\n \n  C.  永久限制\n \n  D.  自然人终生\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("16\n \n下列攻击行为中，（ ）属于被动攻击行为。\n \n \n  A.  拒绝服务攻击\n \n  B.  窃听\n \n  C.  伪造\n \n  D.  篡改消息\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("19\n \n（ ）是可以检错和纠错的校验码。\n \n \n  A.  海明码\n \n  B.  原码\n \n  C.  反码\n \n  D.  补码\n \n 海明码是可以检错和纠错的校验码。\n\n海明码是一种多位冗余校验码，通过在数据中添加冗余位来实现错误检测和纠错。具体来说，海明码在原始数据的基础上添加一些控制位（也称为校验位），用于检测和纠正可能出现的错误。\n\n在海明码中，每个控制位对应一个数据位或多个数据位的异或和。当接收方收到数据后，会重新计算每个控制位的异或和，并将其与发送方发来的校验位进行比较。如果有控制位的值不匹配，则说明数据出现了错误，接收方可以根据控制位的位置和值，确定出错的数据位，并进行纠正。\n\n相比于其他校验码，如奇偶校验、循环冗余校验等，海明码能够检测和纠正更多的错误，因此被广泛应用于数据通信、存储等领域。\n20\n \n对于十进制数-1023，至少需要（ ）个二进制位表示该数(包括符号位)。\n \n \n  A.  8\n \n  B.  9\n \n  C.  10\n \n  D.  11\n  \n  \n  对于十进制数-1023，至少需要11个二进制位来表示该数（包括符号位）。\n\n首先，我们需要考虑符号位。对于有符号数，最高位用来表示正负号，0表示正数，1表示负数。所以，一位被用来表示符号位。\n\n接下来，我们需要确定能够表示-1023的二进制位数。-1023的绝对值在二进制中可以表示为：10000000001。\n\n这个二进制数共有11位，因此至少需要11个二进制位来表示-1023（包括符号位）。\n\n因此，选项 D. 11 是正确答案。\n  \n 21\n \n对于十六进制数5C，可用算式（ ）计算与其对应的十进制数。\n \n \n  A.  5*16+12\n \n  B.  12*16+5\n \n  C.  5*16-12\n \n  D.  12*16-5\n  \n  \n  \n24\n“从减少成本和缩短研发周期考虑，为使系统能运行在不同的微处理器平台上，要求能针对硬件变化进行结构与功能上的配置”属于嵌入式操作系统的（ ）特点。\n \n \n  A.  可定制\n \n  B.  实时性\n \n  C.  可靠性\n \n  D.  易移植性\n \n \n25\n在某单处理机系统中，采用先来先服务调度算法。某一时刻，该系统中有4个进程P1、P2、P3、P4 (假设进程按此顺序到达)，其中P1为运行状态，P2为就绪状态，P3和P4为等待状态；且P3等待打印机，P4等待扫描仪。若P1释放了扫描仪，则下列进程中（ ）处于运行状态。\n \n \n  A.  P1\n \n  B.  P2\n \n  C.  P3\n \n  D.  P4\n \n 根据题目描述，采用先来先服务调度算法，进程P1为运行状态，P2为就绪状态，P3和P4为等待状态，且P3等待打印机，P4等待扫描仪。\n\n如果P1释放了扫描仪，那么下一个处于运行状态的进程应该是就绪状态中最早到达的进程。根据题目描述，P2是就绪状态中最早到达的进程，因此，答案是B. P2。\n\n\n  26\n某系统中有一个缓冲区，进程P1不断地生产产品送入缓冲区，进程P2不断地从缓冲区中取出产品消费，用P、V操作实现进程间的同步模型如下图所示。假设信号量S1的初值为1,信号量S2的初值为0,那么a、b、c处应分别填（ ）。\n\n \n  A.  V (S2)、P (S1)、V (S1)\n \n  B.   V (S2)、P (S2)、V (S1)\n \n  C.   P (S2)、V (S1)、V (S2)\n \n  D.  P (S2)、V (S2)、V (S1) \n  \n   根据题目，进程P1不断地生产产品送入缓冲区，进程P2不断地从缓冲区中取出产品消费。同时，信号量S1的初值为1，表示缓冲区有一个位置可以进行生产操作；信号量S2的初值为0，表示缓冲区没有产品可以进行消费操作。\n\n根据上述同步模型，进程P1在生产产品时需要执行P(S1)操作，以获取S1的使用权，表示缓冲区可以进行生产操作；当完成生产后，需要执行V(S2)操作，以释放S2的使用权，表示缓冲区中有了新的可消费产品。因此，答案中应选择选项A。\n\n进程P2在消费产品时需要执行P(S2)操作，以获取S2的使用权，表示缓冲区中有可消费的产品；当完成消费后，需要执行V(S1)操作，以释放S1的使用权，表示缓冲区有了新的空闲位置。因此，选项B、C、D都是错误的。\n\n")])])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2023/12/26/jdmG5qXO1lI3eA2.png",alt:""}})]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("29 \n下面关于编译和解释的说法中，正确的是（ ）。\n①编译是将高级语言源代码转换成目标代码的过程\n②解释是将高级语言源代码转换为目标代码的过程\n③在编译方式下，用户程序运行的速度更快\n④在解释方式下，用户程序运行的速度更快\n  A.  ①③\n \n  B.  ①④\n \n  C.  ②③\n \n  D.  ②④\n  \n  正确的说法是：\n①编译是将高级语言源代码转换成目标代码的过程\n④在解释方式下，用户程序运行的速度更快\n\n解释：\n①编译是将高级语言源代码转换成目标代码的过程。编译器会将整个源代码一次性地转换成目标机器代码，生成可执行文件，因此编译是一个一次性的过程。\n④在解释方式下，用户程序运行的速度更快。在解释方式下，源代码逐行解释并执行，因此程序的执行速度更快，但解释过程会稍微降低程序的执行效率。\n  \n  \n  35\n某循环队列Q的定义中用front和rear两个整型域变量表示队列状态，其中front 指示队头元素的位置、rear指示队尾元素之后的位置（如下图所示，front的值为5、rear 的值为1）。若队列容量为M（下图中M=6），则计算队列长度的通式为（ ）。\n")])])]),t("p",[t("img",{attrs:{src:"https://s2.loli.net/2023/12/26/TfOdEpQ9lZaxGVu.png",alt:""}})]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" \n  A.  (Q.front - Q.rear)\n \n  B.  (Q.front - Q.rear + M)%M\n \n  C.  (Q.rear - Q.front)\n \n  D.  (Q.rear - Q.front + M)%M\n\n根据权值集合｛0.30, 0.25, 0.25, 0.12, 0.08｝构造的哈夫曼树中，每个权值对应哈夫曼树中的一个叶结点，（ ）。\n \n  A.  根结点到所有叶结点的路径长度相同\n \n  B.  根结点到权值0.30和0.25所表示的叶结点路径长度相同\n \n  C.  根结点到权值0.30所表示的叶结点路径最长\n \n  D.  根结点到权值0.25所表示的两个叶结点路径长度不同\n  \n  \n  40\n对一棵二叉排序树进行（ ）遍历,可得到该二叉树中结点关键字的有序序列。\n \n \n  A.  先序\n \n  B.  中序\n \n  C.  后序\n \n  D.  层序\n  \n46\n在UML中,行为事物是模型中的动态部分，采用动词描述跨越时间和空间的行为。（ ）不属于行为事物。\n \n \n  A.  交互\n \n  B.  状态机\n \n  C.  关联\n \n  D.  活动\n  \n54\n对软件的过分分解不会导致（ ）。\n \n  A.  模块独立性变差\n \n  B.  软件功能减少\n \n  C.  接口复杂度增加\n \n  D.  总的开发工作量增加\n \n57\n数据库系统中，构成数据模型的三要素是（ ）。\n \n  A.  数据类型、关系模型、索引结构\n \n  B.  数据结构、网状模型、关系模型\n \n  C.  数据结构、数据操作、完整性约束\n \n  D.  数据类型、关系模型、完整性约束\n  \n62\n \n假设事务T1对数据D1加了共享锁，事务T2对数据D2加了排它锁，那么（ ）。\n \n \n  A.  事务T2对数据D1加排它锁成功\n \n  B.  事务T1对数据D2加共享锁成功，加排它锁失败\n \n  C.  事务T1 对数据D2加排它锁或共享锁都成功\n \n  D.  事务T1 对数据D2加排它锁和共享锁都失败\n  \n63\n \n某书的页码为1，2，3，...，共用数字900个(一个多位数页码包含多个数字)， 据此可以推断，该书最大的页码为（ ）。\n \n \n  A.  237\n \n  B.  336\n \n  C.  711\n \n  D.  900\n  \n64\n \n已知函数y=f(X)在X1和X2处的值分别为y1和y2，其中，X2>X1且X2-X1比较小(例如0.01)，则对于(x1，x2)区间内的任意X值，可用线性插值公式（ ）近似地计算出f(x)的值。\n \n \n  A.  y1+(y2-y1)(x-x1)/(x2-x1)\n \n  B.  x1+(y2-y1)(x-x1)/(x2-x1)\n \n  C.  y2+(y2-y1)(x2-x1)/(x-x1)\n \n  D.  x2+(x2-x1)(x-x1)/(y2-y1)\n  \n70\n \n当出现网络故障时，一般应首先检查（ ）。\n \n \n  A.  系统病毒\n \n  B.  路由配置\n \n  C.  物理连通性\n \n  D.  主机故障\n  \n  \n  \n71\n \n( ) can help organizations to better understand the information contained within the data and will also help identify the data that is most important to the business and future business decisions.\n \n \n  A.  Data processing system\n \n  B.  Big Data analytics\n \n  C.  Cloud computing\n \n  D.  Database management\n \n \n72\n \nAfter analyzing the source code, ( ) generates machine instructions that will carry out the meaning of the program at a later time.\n \n \n  A.  an interpreter\n \n  B.  a linker\n \n  C.  a compiler\n \n  D.  a converter\n \n \n73\n \nalgorithm specifies the way to arrange data in a particular order.\n \n \n  A.  Search\n \n  B.  Random\n \n  C.  Sorting\n \n  D.  Merge\n \n \n74\n \nAs each application module is completed, it undergoes ( ) to ensure that it operates correctly and reliably .\n \n \n  A.  unit testing\n \n  B.  integration testing\n \n  C.  system testing\n \n  D.  acceptance testing\n \n \n75\n \n( ) is the process of transforming information so it is unintelligible to anyone but the intended recipient.\n \n \n  A.  Encryption\n \n  B.  Decryption\n \n  C.  Security\n \n  D.  Protection\n \n")])])]),t("h2",{attrs:{id:"答案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#答案"}},[n._v("#")]),n._v(" "),t("img",{attrs:{src:"https://s2.loli.net/2023/12/26/YsQFekBCch7R3Jb.png",alt:""}}),n._v("答案")])])}),[],!1,null,null,null);t.default=s.exports}}]);