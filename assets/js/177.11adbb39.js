(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{593:function(t,_,v){"use strict";v.r(_);var a=v(2),s=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"tcp-ip网络模型有哪几层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip网络模型有哪几层"}},[t._v("#")]),t._v(" TCP/IP网络模型有哪几层？")]),t._v(" "),_("p",[t._v("问大家，为什么要有 TCP/IP 网络模型？")]),t._v(" "),_("p",[t._v("对于同一台设备上的进程间通信，有很多种方式，比如有管道、消息队列、共享内存、信号等方式，而对于不同设备上的进程间通信，就需要网络通信，而设备是多样性的，所以要兼容多种多样的设备，就协商出了一套"),_("strong",[t._v("通用的网络协议")]),t._v("。")]),t._v(" "),_("p",[t._v("这个网络协议是分层的，每一层都有各自的作用和职责，接下来就根据「 TCP/IP 网络模型」分别对每一层进行介绍")]),t._v(" "),_("h3",{attrs:{id:"应用层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[t._v("#")]),t._v(" 应用层")]),t._v(" "),_("blockquote",[_("p",[t._v("服务用户，http、telnet、ftp、dns、smtp等")])]),t._v(" "),_("p",[t._v("最上层的，也是我们能直接接触到的就是"),_("strong",[t._v("应用层")]),t._v("（"),_("em",[t._v("Application Layer")]),t._v("），我们电脑或手机使用的应用软件都是在应用层实现。那么，当两个不同设备的应用需要通信的时候，应用就把应用数据传给下一层，也就是传输层。")]),t._v(" "),_("h3",{attrs:{id:"传输层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#传输层"}},[t._v("#")]),t._v(" 传输层")]),t._v(" "),_("blockquote",[_("p",[t._v("有两个协议：1、tcp  2、udp")]),t._v(" "),_("p",[t._v("负责源主机到目标主机间的数据传输")])]),t._v(" "),_("p",[t._v("应用层的数据包会传给传输层，"),_("strong",[t._v("传输层")]),t._v("（"),_("em",[t._v("Transport Layer")]),t._v("）是为应用层提供网络支持的。")]),t._v(" "),_("p",[t._v("TCP 的全称叫传输控制协议（"),_("em",[t._v("Transmission Control Protocol")]),t._v("），大部分应用使用的正是 TCP 传输层协议，比如 HTTP 应用层协议。TCP 相比 UDP 多了很多特性，比如流量控制、超时重传、拥塞控制等，这些都是为了保证数据包能可靠地传输给对方。")]),t._v(" "),_("p",[t._v("UDP 相对来说就很简单，简单到只负责发送数据包，不保证数据包是否能抵达对方，但它实时性相对更好，传输效率也高。当然，UDP 也可以实现可靠传输，把 TCP 的特性在应用层上实现就可以，不过要实现一个商用的可靠 UDP 传输协议，也不是一件简单的事情。")]),t._v(" "),_("p",[t._v("应用需要传输的数据可能会非常大，如果直接传输就不好控制，因此当传输层的数据包大小超过 MSS（TCP 最大报文段长度） ，就要将数据包分块，这样即使中途有一个分块丢失或损坏了，只需要重新发送这一个分块，而不用重新发送整个数据包。在 TCP 协议中，我们把每个分块称为一个 "),_("strong",[t._v("TCP 段")]),t._v("（"),_("em",[t._v("TCP Segment")]),t._v("）。")]),t._v(" "),_("p",[t._v("当设备作为接收方时，传输层则要负责把数据包传给应用，但是一台设备上可能会有很多应用在接收或者传输数据，因此需要用一个编号将应用区分开来，这个编号就是"),_("strong",[t._v("端口")]),t._v("。")]),t._v(" "),_("p",[t._v("比如 80 端口通常是 Web 服务器用的，22 端口通常是远程登录服务器用的。而对于浏览器（客户端）中的每个标签栏都是一个独立的进程，操作系统会为这些进程分配临时的端口号。")]),t._v(" "),_("p",[t._v("由于传输层的报文中会携带端口号，因此接收方可以识别出该报文是发送给哪个应用。")]),t._v(" "),_("h3",{attrs:{id:"网络层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[t._v("#")]),t._v(" 网络层")]),t._v(" "),_("blockquote",[_("p",[t._v("应用到应用之间的通信")])]),t._v(" "),_("p",[t._v("传输层可能大家刚接触的时候，会认为它负责将数据从一个设备传输到另一个设备，事实上它并不负责。")]),t._v(" "),_("p",[t._v("实际场景中的网络环节是错综复杂的，中间有各种各样的线路和分叉路口，如果一个设备的数据要传输给另一个设备，就需要在各种各样的路径和节点进行选择，而传输层的设计理念是简单、高效、专注，如果传输层还负责这一块功能就有点违背设计原则了。")]),t._v(" "),_("p",[t._v("也就是说，我们不希望传输层协议处理太多的事情，只需要服务好应用即可，让其作为应用间数据传输的媒介，帮助实现应用到应用的通信，而实际的传输功能就交给下一层，也就是"),_("strong",[t._v("网络层")]),t._v("（"),_("em",[t._v("Internet Layer")]),t._v("）。")]),t._v(" "),_("h3",{attrs:{id:"网络接口层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网络接口层"}},[t._v("#")]),t._v(" 网络接口层")]),t._v(" "),_("p",[t._v("IP 头部中的接收方 IP 地址表示网络包的目的地，通过这个地址我们就可以判断要将包发到哪里，但在以太网的世界中，这个思路是行不通的。")]),t._v(" "),_("p",[t._v("什么是以太网呢？电脑上的以太网接口，Wi-Fi接口，以太网交换机、路由器上的千兆，万兆以太网口，还有网线，它们都是以太网的组成部分。以太网就是一种在「局域网」内，把附近的设备连接起来，使它们之间可以进行通讯的技术。")]),t._v(" "),_("p",[t._v("以太网在判断网络包目的地时和 IP 的方式不同，因此必须采用相匹配的方式才能在以太网中将包发往目的地，而 MAC 头部就是干这个用的，所以，在以太网进行通讯要用到 MAC 地址。")]),t._v(" "),_("p",[t._v("MAC 头部是以太网使用的头部，它包含了接收方和发送方的 MAC 地址等信息，我们可以通过 ARP 协议获取对方的 MAC 地址。")]),t._v(" "),_("blockquote",[_("p",[t._v("所以说，网络接口层主要为网络层提供「链路级别」传输的服务，负责在以太网、WiFi 这样的底层网络上发送原始数据包，工作在网卡这个层次，使用 MAC 地址来标识网络上的设备。")])]),t._v(" "),_("h3",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/tcpip%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.drawio.png",alt:""}})]),t._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/%E5%B0%81%E8%A3%85.png",alt:""}})]),t._v(" "),_("p",[t._v("网络接口层的传输单位是帧（frame），IP 层的传输单位是包（packet），TCP 层的传输单位是段（segment），HTTP 的传输单位则是消息或报文（message）。但这些名词并没有什么本质的区分，可以统称为数据包。")]),t._v(" "),_("blockquote",[_("p",[t._v("文章来源：https://xiaolincoding.com/network/1_base/tcp_ip_model.html#%E6%80%BB%E7%BB%93")])])])}),[],!1,null,null,null);_.default=s.exports}}]);