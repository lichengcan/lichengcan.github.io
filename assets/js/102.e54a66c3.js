(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{524:function(a,t,s){"use strict";s.r(t);var r=s(2),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"spring-cloud-gateway-路由配置方式及匹配规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-gateway-路由配置方式及匹配规则"}},[a._v("#")]),a._v(" Spring-cloud-gateway 路由配置方式及匹配规则")]),a._v(" "),t("h3",{attrs:{id:"_1、路由配置方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、路由配置方式"}},[a._v("#")]),a._v(" 1、路由配置⽅式")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("路由是⽹关配置的基本组成模块，和"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Zuul")]),a._v("的路由配置模块类似。⼀个"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Route")]),a._v("模块由⼀个 "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ID")]),a._v("，⼀个⽬标 "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("URI")]),a._v("，⼀组断⾔和⼀组过滤器定义。如果断⾔为真，则路由匹配，⽬标"),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("URI")]),a._v("会被访问。\n")])])]),t("h4",{attrs:{id:"_1-1-基础路由配置方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-基础路由配置方式"}},[a._v("#")]),a._v(" 1.1 基础路由配置⽅式")]),a._v(" "),t("p",[a._v("如果请求的⽬标地址，是单个的URI资源路径，配置⽂件实例如下：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    application"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" api"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("gateway \n    cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n      gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n        routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service1 \n            uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("blog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("csdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("net \n            predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n              "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("csdn\n")])])]),t("p",[a._v("各字段含义如下。")]),a._v(" "),t("ul",[t("li",[a._v("id：我们⾃定义的路由 ID，保持唯⼀")]),a._v(" "),t("li",[a._v("uri：⽬标服务地址")]),a._v(" "),t("li",[a._v("predicates：路由条件，Predicate 接受⼀个输⼊参数，返回⼀个布尔值结果。该接⼝包含多种默 认⽅法来将 Predicate 组合成其他复杂的逻辑（⽐如：与，或，⾮）。")])]),a._v(" "),t("p",[a._v("上⾯这段配置的意思是，配置了⼀个 id 为 url-proxy-1的URI代理规则，路由的规则为，当访问地址")]),a._v(" "),t("p",[a._v("http://localhost:8080/csdn/1.jsp时，会路由到上游地址https://blog.csdn.net/1.jsp。")]),a._v(" "),t("h4",{attrs:{id:"_1-2-基于代码的路由配置方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-基于代码的路由配置方式"}},[a._v("#")]),a._v(" 1.2 基于代码的路由配置⽅式")]),a._v(" "),t("p",[a._v("转发功能同样可以通过代码来实现，我们可以在启动类 GateWayApplication 中添加⽅法 customRouteLocator() 来定制转发规则。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SpringBootApplication")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@EnableDiscoveryClient")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GatewayApplication")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   \n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SpringApplication")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GatewayApplication")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RouteLocator")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("customRouteLocator")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RouteLocatorBuilder")]),a._v(" builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" builder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("routes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("route")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"path_route"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" r "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),a._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/csdn"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uri")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://blog.csdn.net"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h4",{attrs:{id:"_1-3-和注册中心相结合的路由配置方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-和注册中心相结合的路由配置方式"}},[a._v("#")]),a._v(" 1.3 和注册中⼼相结合的路由配置⽅式")]),a._v(" "),t("p",[a._v("在uri的schema协议部分为⾃定义的lb:类型，表示从微服务注册中⼼（如Eureka）订阅服 务，并且通过负载均衡进⾏服务的路由。代码如下。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("server"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n\tport"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9005")]),a._v("\nspring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    application"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" api"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("gateway \n    cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n      gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n        routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service1 \n            uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("blog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("csdn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("net \n            predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n              "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("csdn\n          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service2\n          # uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(" \n          \turi"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" lb"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("service \n          \tpredicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" \n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\neureka: \n\tclient: \n\t\tservice-url: \n\t\t\tdefaultZone: http://127.0.0.1:9004/eureka\n")])])])]),t("p",[a._v("注册中⼼相结合的路由配置⽅式，与单个URI的路由配置，区别其实很⼩，仅仅在于URI的 schema协议不同。单个URI的地址的schema协议，⼀般为http或者https协议。启动多个⽀付微 服务，会发现端⼝9000,9001轮流出现。")]),a._v(" "),t("h3",{attrs:{id:"_2、路由匹配规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、路由匹配规则"}},[a._v("#")]),a._v(" 2、路由匹配规则")]),a._v(" "),t("p",[a._v("Spring Cloud Gateway的主要功能之⼀是转发请求，转发规则的定义主要包含三个部分，如表所示。")]),a._v(" "),t("h4",{attrs:{id:"_2-1predicate-断言条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1predicate-断言条件"}},[a._v("#")]),a._v(" 2.1Predicate 断⾔条件")]),a._v(" "),t("p",[a._v("说⽩了 Predicate 就是为了实现⼀组匹配规则，⽅便让请求过来找到对应的 Route 进⾏处理，接下来我们接下 Spring Cloud GateWay 内置⼏种 Predicate 的使⽤。转发规则（predicates），假设 转发uri都设定为http://localhost:9001，常⻅Predicate，如表所示")]),a._v(" "),t("h5",{attrs:{id:"_2-1-1-通过请求参数匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-通过请求参数匹配"}},[a._v("#")]),a._v(" 2.1.1 通过请求参数匹配")]),a._v(" "),t("p",[a._v("Query Route Predicate ⽀持传⼊两个参数，⼀个是属性名⼀个为属性值，属性值可以是正则表达 式")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service3 \n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com \n          order"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Query")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("smile\n")])])]),t("p",[a._v("这样配置，只要请求中包含 smile 属性的参数即可匹配路由。使⽤ curl 测试，命令⾏输⼊：curl localhost:9005?smile=x&id=2，经过测试发现只要请求汇总带有 smile 参数即会匹配路由，不带 smile 参数则不会匹配。 还可以将 Query 的值以键值对的⽅式进⾏配置，这样在请求过来时会对属性值和正则进⾏匹配，匹配上才会⾛路由。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service3 \n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com \n          order"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Query")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("keep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" pu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),t("p",[a._v("这样只要当请求中包含 keep 属性并且参数值是以 pu 开头的⻓度为三位的字符串才会进⾏匹配和路由。 使⽤ curl 测试，命令⾏输⼊：curl localhost:8080?keep=pub，测试可以返回⻚⾯代码，将 keep 的属 性值改为 pubx 再次访问就会报 404，证明路由需要匹配正则表达式才会进⾏路由。")]),a._v(" "),t("h5",{attrs:{id:"_2-1-2-通过header匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-通过header匹配"}},[a._v("#")]),a._v(" 2.1.2 通过Header匹配")]),a._v(" "),t("p",[a._v("Header Route Predicate 和 Query Route Predicate ⼀样，也是接收 2 个参数，⼀个 header 中属性名称和⼀个正则表达式，这个属性值和正则表达式匹配则执⾏。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service4\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com \n          order"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Header")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("X")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Request")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" \\d"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("\n")])])]),t("p",[a._v('使⽤ curl 测试，命令⾏输⼊：curl http://localhost:9005 -H “X-Request-Id:88”，则返回⻚⾯代 码证明匹配成功。将参数-H "X-Request-Id:88"改为-H “X-Request-Id:spring”，再次执⾏时返回 404证明没有匹配。')]),a._v(" "),t("h5",{attrs:{id:"_2-1-3-通过cookie匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-通过cookie匹配"}},[a._v("#")]),a._v(" 2.1.3 通过Cookie匹配")]),a._v(" "),t("p",[a._v("Cookie Route Predicate 可以接收两个参数，⼀个是 Cookie name ,⼀个是正则表达式，路由规则会通过获取对应的 Cookie name 值和正则表达式去匹配，如果匹配上就会执⾏路由，如果没有匹配 上则不执⾏。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service5\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cookie")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("sessionId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" test\n")])])]),t("p",[a._v("使⽤ curl 测试，命令⾏输⼊，curl http://localhost:9005 --cookie “sessionId=test”，则会返回⻚⾯代码，如果去掉–cookie “sessionId=test”，后台汇报 404 错误。")]),a._v(" "),t("h5",{attrs:{id:"_2-1-4-通过host匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-通过host匹配"}},[a._v("#")]),a._v(" 2.1.4 通过Host匹配")]),a._v(" "),t("p",[a._v("Host Route Predicate 接收⼀组参数，⼀组匹配的域名列表，这个模板是⼀个 ant 分隔的模板， ⽤.号作为分隔符。它通过参数中的主机地址作为匹配规则。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service6\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Host")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com\n")])])]),t("p",[a._v('使⽤ curl 测试，命令⾏输⼊，curl http://localhost:9005 -H "Host: www.baidu.com"或者curl http://localhost:8080 -H “Host: md.baidu.com”，经测试以上两种 host 均可匹配到 host_route 路由，去掉 host 参数则会报 404 错误。')]),a._v(" "),t("h5",{attrs:{id:"_2-1-5-通过请求方式匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-5-通过请求方式匹配"}},[a._v("#")]),a._v(" 2.1.5 通过请求⽅式匹配")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service7\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Method")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("PUT")]),a._v("\n")])])]),t("p",[a._v("使⽤ curl 测试，命令⾏输⼊，curl -X PUT http://localhost:9005，测试返回⻚⾯代码，证明匹配 到路由，以其他⽅式，返回 404 没有找到，证明没有匹配上路由")]),a._v(" "),t("h5",{attrs:{id:"_2-1-6-通过请求路径匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-6-通过请求路径匹配"}},[a._v("#")]),a._v(" 2.1.6 通过请求路径匹配")]),a._v(" "),t("p",[a._v("Path RoutePredicate 接收⼀个匹配路径的参数来判断是否路由。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service8\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("baidu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("com \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("如果请求路径符合要求，则此路由将匹配， curl 测试，命令⾏输⼊，curl http://localhost:9005/payment/1， 可以正常获取到⻚⾯返回值，curl http://localhost:9005/payment2/1，报404，证明路由是通过指定路由来匹配")]),a._v(" "),t("h5",{attrs:{id:"_2-1-7-组合匹配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-7-组合匹配"}},[a._v("#")]),a._v(" 2.1.7 组合匹配")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service9\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(" \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Host")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("org \n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("headers\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Method")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GET")]),a._v(" \n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Header")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("X")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Request")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" \\d"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" \n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Query")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("foo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" ba"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" \n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Query")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("baz \n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cookie")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("chocolate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("p\n")])])]),t("p",[a._v("各种 Predicates 同时存在于同⼀个路由时，请求必须同时满⾜所有的条件才被这个路由匹配。 ⼀个请求满⾜多个路由的断⾔条件时，请求只会被⾸个成功匹配的路由转发")]),a._v(" "),t("h4",{attrs:{id:"_2-2-过滤器规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-过滤器规则"}},[a._v("#")]),a._v(" 2.2 过滤器规则")]),a._v(" "),t("p",[a._v("列举⼏个过滤器，如表所示。")]),a._v(" "),t("h5",{attrs:{id:"_2-2-1-prefixpath"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-prefixpath"}},[a._v("#")]),a._v(" 2.2.1 PrefixPath")]),a._v(" "),t("p",[a._v("对所有的请求路径添加前缀")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service10\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(" \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n          filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PrefixPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment\n")])])]),t("p",[a._v("访问/123请求被发送到http://127.0.0.1:9001/payment/123。")]),a._v(" "),t("h5",{attrs:{id:"_2-2-2-stripprefix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-stripprefix"}},[a._v("#")]),a._v(" 2.2.2 StripPrefix")]),a._v(" "),t("p",[a._v("跳过指定的路径")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service11\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(" \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n          filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StripPrefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" \n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PrefixPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment\n")])])]),t("p",[a._v("此时访问http://localhost:9005/api/123，⾸先StripPrefix过滤器去掉⼀个/api，然后PrefixPath 过滤器加上⼀个/payment，能够正确访问到微服务。")]),a._v(" "),t("h5",{attrs:{id:"_2-2-3-rewritepath"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-rewritepath"}},[a._v("#")]),a._v(" 2.2.3 RewritePath")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service12\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(" \n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n          filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RewritePath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("api"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("$\\"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("请求http://localhost:9005/api/payment/123路径，RewritePath过滤器将路径重写为 http://localhost:9005/payment/123，能够正确访问微服务。")]),a._v(" "),t("h5",{attrs:{id:"_2-2-4-setpath"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-setpath"}},[a._v("#")]),a._v(" 2.2.4 SetPath")]),a._v(" "),t("p",[a._v("SetPath和Rewrite类似，代码如下")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service13\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v("\n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n             "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n          filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SetPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("请求http://localhost:9005/api/payment/123路径，SetPath过滤器将路径设置为 http://localhost:9005/payment/123，能够正确访问微服务。")]),a._v(" "),t("h5",{attrs:{id:"_2-2-5-removerequestheader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-removerequestheader"}},[a._v("#")]),a._v(" 2.2.5 RemoveRequestHeader")]),a._v(" "),t("p",[a._v("去掉某个请求头信息。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" removerequestheader_route\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("org  \n          filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RemoveRequestHeader")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("X")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Request")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Foo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12345678")]),a._v("\n")])])]),t("p",[a._v("去掉请求头X-Request-Foo")]),a._v(" "),t("h5",{attrs:{id:"_2-2-6-removeresponseheader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-removeresponseheader"}},[a._v("#")]),a._v(" 2.2.6 RemoveResponseHeader")]),a._v(" "),t("p",[a._v("去掉某个回执头信息")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" removerequestparameter_route\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("org  \n          filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("RemoveRequestParameter")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("red\n")])])]),t("h5",{attrs:{id:"_2-2-7-setrequestheader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-setrequestheader"}},[a._v("#")]),a._v(" 2.2.7 SetRequestHeader")]),a._v(" "),t("p",[a._v("设置请求头信息")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" setrequestheader_route\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("org  \n          filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n          \t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SetRequestHeader")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("X")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Request")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Red")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Blue")]),a._v("\n")])])]),t("h5",{attrs:{id:"_2-2-8-default-filters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-8-default-filters"}},[a._v("#")]),a._v(" 2.2.8 default-filters")]),a._v(" "),t("p",[a._v("对所有的请求添加过滤器")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service14\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v("\n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service15\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9000")]),a._v("\n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StripPrefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PrefixPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment\n")])])]),t("p",[a._v("对所有的请求添加过滤器")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n  cloud"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n    gateway"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n      routes"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service14\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v("\n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" id"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" service15\n          uri"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9000")]),a._v("\n          predicates"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   segment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("filters"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StripPrefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PrefixPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("payment\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);