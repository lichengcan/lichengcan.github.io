(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{536:function(e,a,s){"use strict";s.r(a);var t=s(2),n=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("本文章实现最简单全面的 Jenkins + Docker + Spring Boot 一键自动部署项目。步骤齐全，少走坑路。")]),e._v(" "),a("ul",[a("li",[e._v("环境：CentOS7 + Git (Gitee)")]),e._v(" "),a("li",[e._v("实现步骤：在 Docker 安装 Jenkins，配置 Jenkins 基本信息，利用 Dockerfile 和 Shell 脚本实现项目自动拉取打包并运行。")])]),e._v(" "),a("h2",{attrs:{id:"_1安装-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1安装-docker"}},[e._v("#")]),e._v(" 1安装 Docker")]),e._v(" "),a("p",[e._v("安装社区版本 Docker CE")]),e._v(" "),a("ol",[a("li",[e._v("确保 yum 包更新到最新")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yum update\n")])])]),a("ol",[a("li",[e._v("卸载旧版本（如果安装过旧版本的话）")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yum remove docker  docker-common docker-selinux docker-engine\n")])])]),a("ol",[a("li",[e._v("安装需要的软件包")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yum install -y yum-utils device-mapper-persistent-data lvm2\n")])])]),a("ol",[a("li",[e._v("设置 yum 源")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),a("ol",[a("li",[e._v("安装 Docker")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yum install docker-ce  #由于repo中默认只开启stable仓库，故这里安装的是最新稳定版17.12.0\nyum install <自己的版本>  # 例如：sudo yum install docker-ce-17.12.0.ce\n")])])]),a("ol",[a("li",[e._v("启动并设置开机启动")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("systemctl start docker\nsystemctl enable docker\n")])])]),a("ol",[a("li",[e._v("验证安装是否成功")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker version\n")])])]),a("h2",{attrs:{id:"_2安装-jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2安装-jenkins"}},[e._v("#")]),e._v(" 2安装 Jenkins")]),e._v(" "),a("blockquote",[a("p",[e._v("Jenkins 中文官网：https://www.jenkins.io/zh/")])]),e._v(" "),a("h3",{attrs:{id:"_1-安装-jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-jenkins"}},[e._v("#")]),e._v(" 1. 安装 Jenkins")]),e._v(" "),a("p",[e._v("Docker 安装一切都是那么简单。注意检查 8080 是否已经占用，如果占用请修改端口。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//方法一\ndocker run --name jenkins -u root -d -p 8080:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock jenkinsci/blueocean\n\n//方法二\ndocker run -d -uroot -p 9095:8080 -p 50000:50000 --name jenkins -v /home/jenkins_home:/var/jenkins_home -v /etc/localtime:/etc/localtime jenkins/jenkins\n\ndocker run: 运行Docker容器的命令。\n--name jenkins: 指定容器的名称为“jenkins”。\n-u root: 以root用户身份运行容器。\n--rm: 容器退出后立即删除。\n-d: 在后台运行容器。\n-p 8080:8080: 将主机的端口8080映射到容器的端口8080。\n-p 50000:50000: 将主机的端口50000映射到容器的端口50000。\n-v /var/jenkins_home:/var/jenkins_home: 将主机的/var/jenkins_home目录挂载到容器的/var/jenkins_home目录。\n-v /var/run/docker.sock:/var/run/docker.sock: 将主机的/var/run/docker.sock文件挂载到容器的/var/run/docker.sock文件，以便容器可以与主机上的Docker守护进程通信。\njenkinsci/blueocean: 使用jenkinsci/blueocean镜像来创建容器。\n")])])]),a("p",[e._v("如果没改端口号的话，安装完成后访问地址：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("http://{部署Jenkins所在服务IP}:8080\n")])])]),a("p",[e._v("此处会有几分钟的等待时间。")]),e._v(" "),a("h3",{attrs:{id:"_2-初始化-jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-初始化-jenkins"}},[e._v("#")]),e._v(" 2. 初始化 Jenkins")]),e._v(" "),a("blockquote",[a("p",[e._v("详情见官网教程：https://www.jenkins.io/zh/doc")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("安装插件可能会失败，因为有些是国外的\n\n修改镜像源，将 url 内容修改为 \nhttps://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json\n（清华大学官方镜像） \n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd /home/jenkins_home/\ncat hudson.model.UpdateCenter.xml \n")])])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens1.jpg",alt:""}})]),e._v(" "),a("blockquote",[a("p",[e._v("重启容器")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker restart jenkins\n")])])]),a("h5",{attrs:{id:"_2-1-解锁-jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-解锁-jenkins"}},[e._v("#")]),e._v(" 2.1 解锁 Jenkins")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 进入Jenkins容器\ndocker exec -it {Jenkins容器名} bash  \n# 例如 docker exec -it jenkins bash\n\n# 查看密码\ncat /var/lib/jenkins/secrets/initialAdminPassword\n")])])]),a("h5",{attrs:{id:"_2-2-安装插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-安装插件"}},[e._v("#")]),e._v(" 2.2 安装插件")]),e._v(" "),a("p",[e._v("选择第一项：安装推荐的插件。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens2.jpg",alt:""}})]),e._v(" "),a("h5",{attrs:{id:"_2-3-创建管理员用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-创建管理员用户"}},[e._v("#")]),e._v(" 2.3 创建管理员用户")]),e._v(" "),a("p",[e._v("此账户信息一定要记住哦。")]),e._v(" "),a("h2",{attrs:{id:"_3系统配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3系统配置"}},[e._v("#")]),e._v(" 3系统配置")]),e._v(" "),a("h3",{attrs:{id:"_1-安装需要插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装需要插件"}},[e._v("#")]),e._v(" 1. 安装需要插件")]),e._v(" "),a("p",[e._v("进入【首页】–【系统管理】–【插件管理】–【可选插件】。搜索以下需要安装的插件，点击安装即可。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens3.jpg",alt:""}})]),e._v(" "),a("p",[e._v("安装 "),a("code",[e._v("Maven Integration")])]),e._v(" "),a("p",[e._v("安装 "),a("code",[e._v("Publish Over SSH")]),e._v("（如果不需要远程推送，不用安装）")]),e._v(" "),a("p",[e._v("如果使用 Gitee 码云，安装插件Gitee（自带 Git 不用单独安装）")]),e._v(" "),a("h3",{attrs:{id:"_2-配置-maven"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置-maven"}},[e._v("#")]),e._v(" 2. 配置 Maven")]),e._v(" "),a("p",[e._v("进入【首页】–【系统管理】–【全局配置】，拉到页面最下方 maven–maven 安装。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens4.jpg",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_4创建任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4创建任务"}},[e._v("#")]),e._v(" 4创建任务")]),e._v(" "),a("h3",{attrs:{id:"_1-新建任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-新建任务"}},[e._v("#")]),e._v(" 1. 新建任务")]),e._v(" "),a("p",[e._v("点击【新建任务】，输入任务名称，点击构建一个自由风格的软件项目。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens5.jpg",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_2-源码管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-源码管理"}},[e._v("#")]),e._v(" 2. 源码管理")]),e._v(" "),a("p",[e._v("点击【源码管理】–【Git】，输入仓库地址，添加凭证，选择好凭证即可。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens6.jpg",alt:""}})]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/Jenkins7.jpg",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_3-构建触发器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-构建触发器"}},[e._v("#")]),e._v(" 3. 构建触发器")]),e._v(" "),a("p",[e._v("点击【构建触发器】–【构建】–【增加构建步骤】–【调用顶层 Maven 目标】–【「填写配置」】–【保存】。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens8.png",alt:""}})]),e._v(" "),a("p",[e._v("此处命令只是 install，看是否能生成 jar 包。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("clean install -Dmaven.test.skip=true\n")])])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens9.jpg",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_4-保存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-保存"}},[e._v("#")]),e._v(" 4. 保存")]),e._v(" "),a("p",[e._v("点击【保存】按钮即可。")]),e._v(" "),a("h2",{attrs:{id:"_5测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5测试"}},[e._v("#")]),e._v(" 5测试")]),e._v(" "),a("p",[e._v("该功能测试是否能正常打包。")]),e._v(" "),a("h3",{attrs:{id:"_1-构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-构建"}},[e._v("#")]),e._v(" 1. 构建")]),e._v(" "),a("p",[e._v("点击构建按钮。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens10.jpg",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_2-查看日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-查看日志"}},[e._v("#")]),e._v(" 2. 查看日志")]),e._v(" "),a("p",[e._v("点击正在构建的任务，或者点击任务名称进入详情页面，查看控制台输出。看是否能成功打成 jar 包。")]),e._v(" "),a("p",[e._v("该处日志第一次可能下载依赖 jar 包失败，再次点击构建即可成功。")]),e._v(" "),a("p",[a("img",{attrs:{src:"E:%5Cvuepress-starter%5Cdocs%5CDocker%5CJenkins-Docker-SpringBoot.assets%5Cimage-20231124150536036.png",alt:"image-20231124150536036"}})]),e._v(" "),a("p",[a("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/eQPyBffYbudkHOibGBhmU0zllsS26w1dm1FDK0jcrKB26WX6biahoUOKvnWanfYGq3aOOTAZ9Ls95yBewPuwFqpw/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens11.jpg",alt:""}})]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens12.jpg",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_3-查看项目位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-查看项目位置"}},[e._v("#")]),e._v(" 3. 查看项目位置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd /var/jenkins_home/workspace\nll # 即可查看是否存在\n")])])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens13.jpg",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_6运行项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6运行项目"}},[e._v("#")]),e._v(" 6运行项目")]),e._v(" "),a("p",[e._v("因为项目和 Jenkins 在同一台服务器，所以我们用 Shell 脚本运行项目，原理既是通过 Dockerfile 打包镜像，然后 docker 运行即可。")]),e._v(" "),a("h3",{attrs:{id:"_1-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-dockerfile"}},[e._v("#")]),e._v(" 1. Dockerfile")]),e._v(" "),a("p",[e._v("在 Spring Boot 项目根目录新建一个名为 Dockerfile 的文件，注意没有后缀名。")]),e._v(" "),a("p",[e._v("其内容如下：（大致就是使用 JDK 8，把 jar 包添加到 docker 然后运行 prd 配置文件。详细可以查看其他教程）")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('FROM jdk:8\nVOLUME /tmp\nADD target/zx-order-0.0.1-SNAPSHOT.jar app.jar\nEXPOSE 8888ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar","--spring.profiles.active=prd"]\n')])])]),a("h3",{attrs:{id:"_2-修改-jenkins-任务配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改-jenkins-任务配置"}},[e._v("#")]),e._v(" 2. 修改 Jenkins 任务配置")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens14.jpg",alt:""}})]),e._v(" "),a("p",[e._v("配置如下：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens15.jpg",alt:""}})]),e._v(" "),a("p",[e._v('"-t" 指定新镜像名，"." 表示 Dockfile 在当前路径。')]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd /var/jenkins_home/workspace/zx-order-api\ndocker stop zx-order || true\ndocker rm zx-order || true\ndocker rmi zx-order || true\ndocker build -t zx-order .\ndocker run -d -p 8888:8888 --name zx-order zx-order:latest\n")])])]),a("p",[e._v("备注：")]),e._v(" "),a("ol",[a("li",[e._v("上图用了 docker logs -f 是为了方便看日志，真实环境不要用，因为会一直等待日志，构建任务会失败；")]),e._v(" "),a("li",[e._v('加 "|| true" 是如果命令执行失败也会继续实行，为了防止第一次没有该镜像报错；')]),e._v(" "),a("li",[e._v("保存：点击保存即可；")]),e._v(" "),a("li",[e._v("构建：查看 Jenkins 控制台输出，输出如下，证明成功；")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/jenkens16.jpg",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_5-验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-验证"}},[e._v("#")]),e._v(" 5. 验证")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker ps # 查看是否有自己的容器\ndocker logs # 自己的容器名，查看日志是否正确\n# 打开浏览器访问项目\n")])])]),a("h2",{attrs:{id:"卸载jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卸载jenkins"}},[e._v("#")]),e._v(" 卸载jenkins")]),e._v(" "),a("p",[e._v("要彻底卸载 Jenkins，你需要删除 Jenkins 相关的文件和数据。以下是一般情况下彻底卸载 Jenkins 的步骤：")]),e._v(" "),a("ol",[a("li",[a("p",[a("strong",[e._v("停止 Jenkins 服务")]),e._v("：首先，你需要停止 Jenkins 服务，可以使用以下命令：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo systemctl stop jenkins\n")])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("卸载 Jenkins 软件包")]),e._v("：使用适合你的 Linux 发行版的软件包管理工具（例如 apt、yum 等）来卸载 Jenkins 软件包。以下是一些常见发行版的卸载命令示例：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("对于 Ubuntu/Debian：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo apt-get remove --purge jenkins\n")])])])]),e._v(" "),a("li",[a("p",[e._v("对于 CentOS/RHEL：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo yum remove jenkins\n")])])])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("删除 Jenkins 数据目录")]),e._v("：Jenkins 默认的数据目录通常位于 "),a("code",[e._v("/var/lib/jenkins")]),e._v("。你可以使用以下命令删除该目录及其内容：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo rm -rf /var/lib/jenkins\n")])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("删除 Jenkins 配置文件")]),e._v("：Jenkins 的配置文件通常位于 "),a("code",[e._v("/etc/default/jenkins")]),e._v(" 或 "),a("code",[e._v("/etc/sysconfig/jenkins")]),e._v("，你也可以删除这些文件：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo rm /etc/default/jenkins\n")])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("清理 Jenkins 用户和组")]),e._v("：如果 Jenkins 安装过程中创建了特定的用户和组，你也可以将其删除：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo deluser jenkins\nsudo delgroup jenkins\n")])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("清理 Jenkins 服务器残留的文件")]),e._v("：在进行上述步骤后，你可以检查是否有其他与 Jenkins 相关的残留文件，如日志文件、临时文件等，并将其删除。")])])]),e._v(" "),a("p",[e._v("完成以上步骤后，Jenkins 将被彻底卸载。请注意，在执行这些命令时，确保你拥有足够的权限，以免意外操作影响系统稳定性。")])])}),[],!1,null,null,null);a.default=n.exports}}]);