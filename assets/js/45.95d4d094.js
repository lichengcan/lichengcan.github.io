(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{463:function(e,n,a){"use strict";a.r(n);var t=a(2),r=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"解决mybatis-plus分页查询不生效-配置分页拦截器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决mybatis-plus分页查询不生效-配置分页拦截器"}},[e._v("#")]),e._v(" 解决mybatis-plus分页查询不生效，配置分页拦截器")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("default <E extends IPage<T>> E page(E page, Wrapper<T> queryWrapper) {\n        return this.getBaseMapper().selectPage(page, queryWrapper);\n}\n")])])]),n("p",[n("img",{attrs:{src:"20240110.assets/image-20240110105002125.png",alt:"image-20240110105002125"}})]),e._v(" "),n("p",[e._v("这里的total永远是0")]),e._v(" "),n("h2",{attrs:{id:"参考官方分页配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考官方分页配置"}},[e._v("#")]),e._v(" 参考官方分页配置")]),e._v(" "),n("p",[n("img",{attrs:{src:"20240110.assets/image-20240110105046418.png",alt:"image-20240110105046418"}})]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('@Configuration\n@MapperScan("scan.your.mapper.package")\npublic class MybatisPlusConfig {\n\n    /**\n     * 添加分页插件\n     */\n    @Bean\n    public MybatisPlusInterceptor mybatisPlusInterceptor() {\n        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();\n        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));//如果配置多个插件,切记分页最后添加\n        //interceptor.addInnerInterceptor(new PaginationInnerInterceptor()); 如果有多数据源可以不配具体类型 否则都建议配上具体的DbType\n        return interceptor;\n    }\n}\n')])])]),n("h2",{attrs:{id:"常用querywrapper方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用querywrapper方法"}},[e._v("#")]),e._v(" 常用QueryWrapper方法")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("基础条件查询：\n\neq(String column, Object value)：等于某个值\nne(String column, Object value)：不等于某个值\ngt(String column, Object value)：大于某个值\nge(String column, Object value)：大于或等于某个值\nlt(String column, Object value)：小于某个值\nle(String column, Object value)：小于或等于某个值\nbetween(String column, Object value1, Object value2)：在两个值之间\nnotBetween(String column, Object value1, Object value2)：不在两个值之间\n模糊查询：\n\nlike(String column, String value)：包含指定字符串（%value%）\nlikeLeft(String column, String value)：左侧模糊匹配（value%）\nlikeRight(String column, String value)：右侧模糊匹配（%value）\nnotLike(String column, String value)：不包含指定字符串\n空值判断：\n\nisNull(String column)：字段值为空或null\nisNotNull(String column)：字段值不为空或null\n集合条件：\n\nin(String column, Collection<?> values)：字段值在指定集合内\nnotIn(String column, Collection<?> values)：字段值不在指定集合内\n逻辑操作符：\n\nand(Consumer<QueryWrapper<T>> consumer)：连接一个与当前查询条件的AND子句\nor(Consumer<QueryWrapper<T>> consumer)：连接一个与当前查询条件的OR子句\nnested(Consumer<QueryWrapper<T>> consumer)：嵌套查询，用于组合更复杂的逻辑关系\n排序和分页：\n\norderByAsc(String... columns)：按指定列升序排列\norderByDesc(String... columns)：按指定列降序排列\n分页通常不是QueryWrapper直接处理的，而是通过Page对象结合page(Page<T> page, QueryWrapper<T> wrapper)方法实现。\n自定义查询字段：\n\nselect(String... columns)：指定需要查询的字段列表\n其他高级用法：\n\nexists(Consumer<SubQueryWrapper<T>> consumer)：用于存在性查询\napply(String sqlSegment)：添加自定义SQL片段作为查询条件\n批量更新：\n\nset(String column, Object val)：设置更新时的字段值\n")])])]),n("h1",{attrs:{id:"数据库服务器时区与应用服务器时区不一致"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库服务器时区与应用服务器时区不一致"}},[e._v("#")]),e._v(" 数据库服务器时区与应用服务器时区不一致")]),e._v(" "),n("p",[e._v("在实体类修改一下时区，他会出手的")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")\n')])])]),n("h1",{attrs:{id:"pom打包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pom打包"}},[e._v("#")]),e._v(" pom打包")]),e._v(" "),n("h3",{attrs:{id:"我配置了version使用maven打包插件进行打包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#我配置了version使用maven打包插件进行打包"}},[e._v("#")]),e._v(" 我配置了version使用maven打包插件进行打包：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<artifactId>carbon-leaderboard-server</artifactId>\n<packaging>jar</packaging>\n<version>1.0.0-SNAPSHOT</version>\n")])])]),n("h3",{attrs:{id:"maven插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#maven插件"}},[e._v("#")]),e._v(" maven插件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("    <build>\n        <finalName>${project.artifactId}</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <configuration>\n                    <skipTests>true</skipTests>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n")])])]),n("h3",{attrs:{id:"打的包没有版本号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打的包没有版本号"}},[e._v("#")]),e._v(" 打的包没有版本号")]),e._v(" "),n("p",[e._v("这里加上版本号拼接")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<finalName>${project.artifactId}-${project.version}</finalName>\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);