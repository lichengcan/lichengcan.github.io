(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{548:function(e,t,n){"use strict";n.r(t);var a=n(2),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"oauth2-0开放授权实现微信扫码登录第三方平台"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0开放授权实现微信扫码登录第三方平台"}},[e._v("#")]),e._v(" OAuth2.0开放授权实现微信扫码登录第三方平台")]),e._v(" "),t("h2",{attrs:{id:"开发前准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发前准备"}},[e._v("#")]),e._v(" 开发前准备")]),e._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login",target:"_blank",rel:"noopener noreferrer"}},[e._v("微信公众平台 (qq.com)"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("需要注册微信测试号")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/image-20231201151537297.png",alt:""}})]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("测试号")]),e._v("信息是自动生成的，"),t("strong",[e._v("注意")]),e._v("后面需要替换"),t("strong",[e._v("WechatUtil")]),e._v("里面的APPID和SECRET")]),e._v(" "),t("li",[e._v("接口配置信息，URL需要搞一个内网穿透，打通你的电脑和微信之间的网络，这个很简单，下载：https://www.cpolar.com/这个应用，里面配置把你的本地服务端口给代理出去,URL可能用https会有问题，换http的试试，https-443，http80，你的服务是80，所以可能会有问题。")]),e._v(" "),t("li",[e._v("JS接口安全域名：这个可以不弄")]),e._v(" "),t("li",[e._v("找到网页账号，点击编辑，配置OAuth2授权域名")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/image-20231201151932944.png",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/image-20231201152102921.png",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/image-20231201152204092.png",alt:""}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/image-20231201152214887.png",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"相关依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关依赖"}},[e._v("#")]),e._v(" 相关依赖")]),e._v(" "),t("blockquote",[t("p",[e._v("hutool和google.zxing在生成Qrcode要用到")]),e._v(" "),t("p",[e._v("其他都是一些常见的依赖")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    <dependencies>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n\t\t\n        <dependency>\n            <groupId>cn.hutool</groupId>\n            <artifactId>hutool-all</artifactId>\n            <version>5.7.5</version>\n        </dependency>\n        \n        <dependency>\n            <groupId>com.google.zxing</groupId>\n            <artifactId>core</artifactId>\n            <version>3.3.3</version>\n        </dependency>\n\n        \x3c!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api --\x3e\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>2.0.7</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>2.0.32</version>\n        </dependency>\n    </dependencies>\n")])])]),t("h2",{attrs:{id:"实体类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实体类"}},[e._v("#")]),e._v(" 实体类")]),e._v(" "),t("blockquote",[t("h4",{attrs:{id:"获取access-token返回参数实体类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取access-token返回参数实体类"}},[e._v("#")]),e._v(" 获取access_token返回参数实体类")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@Data\npublic class TokenInfo {\n\n    private String access_token;\n    private int expires_in;\n    private String refresh_token;\n    private String openid;\n    private String scope;\n}\n")])])]),t("blockquote",[t("h4",{attrs:{id:"用户信息实体类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用户信息实体类"}},[e._v("#")]),e._v(" 用户信息实体类")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@Data\npublic class WeChatUserInfo {\n    private String openid;\n    private String nickname;\n    private int sex;\n    private String language;\n    private String city;\n    private String province;\n    private String country;\n    private String headimgurl;\n    private List<String> privilege;\n}\n")])])]),t("h2",{attrs:{id:"controller控制器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controller控制器"}},[e._v("#")]),e._v(" Controller控制器")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('package com.lcc.wechatdemo.controller;\n\nimport cn.hutool.extra.qrcode.QrCodeUtil;\nimport com.lcc.wechatdemo.model.entity.WeChatUserInfo;\nimport com.lcc.wechatdemo.util.WechatUtil;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.web.bind.annotation.*;\nimport org.springframework.web.client.RestTemplate;\n\nimport java.net.URLEncoder;\n\n\n/**\n * @author: lichengcan\n * @date: 2023-12-01 11:04\n * @description 微信登录练习demo\n **/\n@RestController\n@RequestMapping()\n@Slf4j\npublic class WeChatController {\n\n    @Value("${wx.APPID}")\n    String APPID;\n\n    @Value("${wx.REDIRECTURL}")\n    String REDIRECTURL;\n\n    @Autowired\n    RestTemplate restTemplate;\n    @Autowired\n    WechatUtil wechatUtil;\n\n    @GetMapping("/wxCheck")\n    public String wxSignatureCheck(@RequestParam(value = "signature") String signature,\n                                   @RequestParam(value = "timestamp") String timestamp,\n                                   @RequestParam(value = "nonce") String nonce,\n                                   @RequestParam(value = "echostr") String echostr) {\n        //这里需要检验signature，确认是来自微信服务器\n        //1）将token、timestamp、nonce三个参数进行字典序排序\n        //2）将三个参数字符串拼接成一个字符串进行sha1加密\n        //3）开发者获得加密后的字符串可与signature对比，标识该请求来源于微信\n        //TODO 省略校验\n        log.info("收到微信校验请求，echostr:{}" + echostr);\n        return echostr;\n    }\n\n    /**\n     * 微信登录，生成登录二维码\n     * 如果用户同意授权，页面将跳转至 redirect_uri/?code=CODE&state=STATE。\n     *\n     * @param response\n     * @throws Exception\n     */\n    @GetMapping("/wxLogin")\n    @ResponseBody\n    public void wxLogin(HttpServletResponse response) throws Exception {\n        //redirectUrl是回调地址，需要转成UrlEncode格式\n        String redirectUrl = URLEncoder.encode(REDIRECTURL+"wxCallBack", "UTF-8");\n        //构造生成二维码链接地址\n        String url = "https://open.weixin.qq.com/connect/oauth2/authorize?appid="+APPID+"&redirect_uri="\n                + redirectUrl + "&response_type=code&scope=snsapi_userinfo#wechat_redirect";\n        //构造生成二维码，然后跳转上面的地址\n        response.setContentType("image/png");\n        QrCodeUtil.generate(url, 300, 300, "jpg", response.getOutputStream());\n    }\n\n\n\n    /**\n     * 通过code换取网页授权access_token\n     * 如果用户同意授权，页面将跳转至 redirect_uri/?code=CODE&state=STATE。\n     * code作为换取access_token的票据，每次用户授权带上的code将不一样，code只能使用一次，5分钟未被使用自动过期。\n     *\n     * @param code\n     * @param state\n     * @param request\n     * @param response\n     * @param session\n     * @return\n     */\n    @RequestMapping(value = "/wxCallBack")\n    @ResponseBody\n    public WeChatUserInfo wxCallBack(String code,\n                                     String state,\n                                     HttpServletRequest request,\n                                     HttpServletResponse response,\n                                     HttpSession session) {\n        WeChatUserInfo accessToken = wechatUtil.getUserInfo(code);\n        //TODO 缓存用户信息，构造session\n        return accessToken;\n    }\n\n\n}\n\n')])])]),t("h2",{attrs:{id:"resttemplate配置类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resttemplate配置类"}},[e._v("#")]),e._v(" RestTemplate配置类")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@Configuration\npublic class RestTemplateConfig {\n    @Bean\n    public RestTemplate getRestTemplate() {\n        return new RestTemplate();\n    }\n}\n")])])]),t("h2",{attrs:{id:"工具类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工具类"}},[e._v("#")]),e._v(" 工具类")]),e._v(" "),t("blockquote",[t("p",[e._v("二维码生成工具类")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('public class QrCodeTest {\n\n\n    /**\n     * L、M、Q、H  由低到高。\n     * 低级别的像素块更大，可以远距离识别，但是遮挡就会造成无法识别。\n     * 高级别则相反，像素块小，允许遮挡一定范围，但是像素块更密集。\n     * @param args\n     */\n    public static void main(String[] args) {\n        QrConfig config = new QrConfig();\n        //设置容错级别\n        config.setErrorCorrection(ErrorCorrectionLevel.H);\n        QrCodeUtil.generate("https://hutool.cn/",300,300, FileUtil.file("d:/qrcode.jpg"));\n    }\n\n}\n')])])]),t("blockquote",[t("p",[e._v("微信接口工具类")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('@Component\npublic class WechatUtil {\n\n    @Value("${wx.APPID}")\n    String APPID;\n    @Value("${wx.SECRET}")\n    String SECRET;\n\n    public WeChatUserInfo getUserInfo(String code) {\n        //通过code换取网页授权access_token\n        String url = "https://api.weixin.qq.com/sns/oauth2/access_token?appid=" +\n                APPID + "&secret=" + SECRET + "&code=" + code + "&grant_type=authorization_code";\n        RestTemplate restTemplate = new RestTemplate();\n        //1.获取token\n        String accessToken = restTemplate.getForObject(url, String.class);\n        TokenInfo tokenInfo = JSON.parseObject(accessToken, TokenInfo.class);\n        //2.获取用户信息\n        String userInfoUrl = "https://api.weixin.qq.com/sns/userinfo?access_token=" + tokenInfo.getAccess_token() + "&openid=" + tokenInfo.getOpenid() + "&lang=zh_CN";\n        String userInfo = restTemplate.getForObject(userInfoUrl, String.class);\n        WeChatUserInfo weChatUserInfo = JSON.parseObject(userInfo, WeChatUserInfo.class);\n        return weChatUserInfo;\n    }\n}\n\n')])])]),t("h2",{attrs:{id:"配置文件yml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置文件yml"}},[e._v("#")]),e._v(" 配置文件yml")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wx:\n  # 换成你自己的微信 ID、SECRET\n  APPID: wxa90967105d3402f4\n  SECRET: ab13896b831b85cba266ca4166f3d500\n  # cpolor代理的域名\n  REDIRECTURL: https://3524e8fe.r9.cpolar.top/\n")])])]),t("h2",{attrs:{id:"测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[e._v("#")]),e._v(" 测试")]),e._v(" "),t("blockquote",[t("p",[e._v("访问域名+/wxLogin测试")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/test2.jpg",alt:""}})]),e._v(" "),t("blockquote",[t("p",[e._v("获取到用户相关信息")])]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/lichengcan/images/main/image-20231201180540889.png",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"问题记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题记录"}},[e._v("#")]),e._v(" 问题记录")]),e._v(" "),t("p",[t("strong",[e._v("1使用微信扫码后没有授权页面，直接返回了用户信息")])]),e._v(" "),t("p",[t("strong",[e._v("2返回的用户信息缺少了一部分，sex，language，city等都是空")])]),e._v(" "),t("blockquote",[t("p",[e._v("相关文档：")]),e._v(" "),t("p",[e._v("https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&t=sandbox/index")]),e._v(" "),t("p",[e._v("https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/iOS_WKWebview.html")]),e._v(" "),t("p",[e._v("https://www.cpolar.com/")])])])}),[],!1,null,null,null);t.default=r.exports}}]);