(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{458:function(t,e,n){"use strict";n.r(e);var r=n(2),s=Object(r.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h3",{attrs:{id:"get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[this._v("#")]),this._v(" Get")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('    public ResponseEntity<String>  doGet(Major major, String url) {\n\n        //请求头\n        HttpHeaders headers = new HttpHeaders();\n        headers.add("appId", APP_ID);\n        headers.add("timestamp", getTimestamp());\n        headers.add("sign", sign());\n\n        //封装请求头\n        HttpEntity<MultiValueMap<String, Object>> formEntity = new HttpEntity<MultiValueMap<String, Object>>(headers);\n\n        try {\n            //1. 有参数，没有请求头，拼接方式\n//            String result1 = restTemplate.getForObject(url + "?id="+id+"&name="+name, String.class);\n            //2. 有参数，没有请求头，占位符方式\n//            String result2 = restTemplate.getForObject(url + "?id={id}&name={name}", String.class, param);\n            //3. 有请求头，没参数，result3.getBody()获取响应参数\n//            ResponseEntity<String> result3 = restTemplate.exchange(url, HttpMethod.GET, formEntity, String.class);\n//            System.out.println("result3 = " + result3);\n//            4. 有请求头，有参数，result4.getBody()获取响应参数\n            Boolean isCount = true;\n            ResponseEntity<String> result4 = restTemplate.exchange(url + "?$top=" + 1000+"&"+"$count="+isCount, HttpMethod.GET, formEntity, String.class);\n            return result4;\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        \n    }\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);