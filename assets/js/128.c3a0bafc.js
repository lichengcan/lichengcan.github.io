(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{544:function(a,n,e){"use strict";e.r(n);var t=e(2),s=Object(t.a)({},(function(){var a=this,n=a._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h3",{attrs:{id:"_1-maven依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-maven依赖"}},[a._v("#")]),a._v(" 1 maven依赖")]),a._v(" "),n("p",[a._v("如果是springboot 项目这个nacos的依赖要和父工程依赖版本一致，不然好多问题")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.2.7.RELEASE</version>\n        <relativePath/> \x3c!-- lookup parent from repository --\x3e\n    </parent>\n     \n      <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\n            <version>2.2.7.RELEASE</version>\n        </dependency>\n        \n        \n        \n")])])]),n("h3",{attrs:{id:"_2-配置文件-bootstrap-yaml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置文件-bootstrap-yaml"}},[a._v("#")]),a._v(" 2 配置文件 bootstrap.yaml")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("spring:  \n  cloud:\n    nacos:\n      config:\n        # 配置中心地址\n        server-addr: 127.0.0.1:8848\n        # 配置文件格式\n        file-extension: yaml\n        # 设置分组\n        group: DEFAULT_GROUP\n        # 命名空间\n        namespace: 16c8d16e-d7de-4ca8-bb0d-7c2ab4c2a409\n        # 共享配置\n        shared-configs:\n          - application-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}\n")])])]),n("h3",{attrs:{id:"_3-测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-测试"}},[a._v("#")]),a._v(" 3 测试")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@RestController\n@RequestMapping("/config")\n@RefreshScope\npublic class ConfigController {\n\n    @Value("${useLocalCache:false}")\n    private boolean useLocalCache;\n\n    /**\n     * http://localhost:8080/config/get\n     */\n    @RequestMapping("/get")\n    public boolean get() {\n        return useLocalCache;\n    }\n}\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);