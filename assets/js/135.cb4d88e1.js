(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{550:function(a,n,e){"use strict";e.r(n);var t=e(2),o=Object(t.a)({},(function(){var a=this,n=a._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("p",[n("a",{attrs:{href:"https://gitee.com/lichengcan0228/spring-boot-labs/blob/dev/lab-16-spring-data-mongo/lab-16-spring-data-mongodb/src/test/java/cn/iocoder/springboot/lab16/springdatamongodb/dao/UserDaoTest.java",target:"_blank",rel:"noopener noreferrer"}},[a._v("MongoDB测试代码"),n("OutboundLink")],1)]),a._v(" "),n("h1",{attrs:{id:"_1-单机部署"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-单机部署"}},[a._v("#")]),a._v(" 1. 单机部署")]),a._v(" "),n("blockquote",[n("p",[a._v("操作系统：macOS 10.14")]),a._v(" "),n("p",[a._v("其它系统，基本一致的。")])]),a._v(" "),n("p",[n("strong",[a._v("1、下载")]),a._v("：")]),a._v(" "),n("p",[a._v("打开 "),n("a",{attrs:{href:"https://www.mongodb.com/download-center/community",target:"_blank",rel:"noopener noreferrer"}},[a._v("MongoDB 下载页面"),n("OutboundLink")],1),a._v("，选择对应的 Version、OS、Package ，获得下载地址。这里，我们选择如下：")]),a._v(" "),n("ul",[n("li",[a._v("Version ：4.2.1(current release)")]),a._v(" "),n("li",[a._v("OS ：macOS x64")]),a._v(" "),n("li",[a._v("Package ：TGZ")])]),a._v(" "),n("p",[a._v("获得到下载地址为：https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-4.2.1.tgz 。")]),a._v(" "),n("p",[a._v("打开 Terminal 终端，进行下载。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 创建目录\n$ mkdir -p /Users/yunai/MongoDB\n$ cd /Users/yunai/MongoDB\n\n# 下载\n$ wget https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-4.2.1.tgz\n")])])]),n("ul",[n("li",[a._v("MongoDB 安装包大概有 100m 多，所以下载可能比较久。此时，可以考虑上迅雷，哈哈哈。")])]),a._v(" "),n("p",[n("strong",[a._v("2、解压：")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 解压\n$ tar -zxvf mongodb-macos-x86_64-4.2.1.tgz\n\n# 进入\n$ cd mongodb-macos-x86_64-4.2.1\n")])])]),n("p",[n("strong",[a._v("3、编辑配置：")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 创建 data、log 目录\n$ mkdir data\n$ mkdir log\n\n# 编辑配置文件\n$ vi mongodb.conf\n")])])]),n("p",[a._v("配置文件如下：")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("dbpath=/Users/yunai/MongoDB/mongodb-macos-x86_64-4.2.1/data\nlogpath=/Users/yunai/MongoDB/mongodb-macos-x86_64-4.2.1/log/master.log\nfork=true\nmaxConns=4000\nlogappend=true\n")])])]),n("ul",[n("li",[a._v("每个配置项的解释，直接看 "),n("a",{attrs:{href:"https://www.jianshu.com/p/b4c5480146a9",target:"_blank",rel:"noopener noreferrer"}},[a._v("《mongodb.conf 配置文件详解》"),n("OutboundLink")],1),a._v(" 文章。")])]),a._v(" "),n("p",[n("strong",[a._v("4、启动：")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ bin/mongod -f mongodb.conf\n")])])]),n("p",[n("strong",[a._v("5、测试：")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ bin/mongo\n")])])]),n("ul",[n("li",[a._v("进入 MongoDB shell 成功，说明 MongoDB 启动成功了。")])]),a._v(" "),n("h1",{attrs:{id:"_2-安全认证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-安全认证"}},[a._v("#")]),a._v(" 2. 安全认证")]),a._v(" "),n("p",[a._v("**注意！！！*"),n("em",[a._v("一定要给 MongoDB 初始化管理员账号，并开启 MongoDB 的*"),n("em",[a._v("安全认证")])]),a._v("。")]),a._v(" "),n("p",[a._v("不同于 MySQL 的账号密码管理，MongoDB 的账号密码是基于"),n("strong",[a._v("特定")]),a._v("数据库的，而不是整个 MongoDB 系统。也就是说，创建的每个账号密码，只能访问操作一个数据库。")]),a._v(" "),n("p",[n("strong",[a._v("1、创建管理员账号：")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('# 连接 MongoDB\n$ bin/mongo\n\n# 切换到 admin 库\n> use admin;\n\n# 创建管理员账号\n> db.createUser({ user: "useradmin", pwd: "adminpassword", roles: [{ role: "userAdminAnyDatabase", db: "admin" }] })\n')])])]),n("ul",[n("li",[n("code",[a._v("user")]),a._v(" ：账号。")]),a._v(" "),n("li",[n("code",[a._v("pwd")]),a._v(" ：密码。")]),a._v(" "),n("li",[n("code",[a._v("role")]),a._v(" ：角色。")]),a._v(" "),n("li",[n("code",[a._v("db")]),a._v(" ：所属数据库。")])]),a._v(" "),n("p",[a._v("在 MongoDB 中，用户是基于角色（role）授权。内置角色如下：")]),a._v(" "),n("blockquote",[n("p",[a._v("FROM "),n("a",{attrs:{href:"https://blog.csdn.net/skh2015java/article/details/83545712",target:"_blank",rel:"noopener noreferrer"}},[a._v("《MongoDB 开启权限验证及设置用户名密码》"),n("OutboundLink")],1)]),a._v(" "),n("p",[a._v("内建的角色")]),a._v(" "),n("ul",[n("li",[a._v("数据库用户角色 ：read、readWrite")]),a._v(" "),n("li",[a._v("数据库管理角色 ：dbAdmin、dbOwner、userAdmin")]),a._v(" "),n("li",[a._v("集群管理角色 ：clusterAdmin、clusterManager、clusterMonitor、hostManager")]),a._v(" "),n("li",[a._v("备份恢复角色 ：backup、restore")]),a._v(" "),n("li",[a._v("所有数据库角色 ：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase")]),a._v(" "),n("li",[a._v("超级用户角色 ：root // 这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner、userAdmin、userAdminAnyDatabase）")])]),a._v(" "),n("p",[a._v("角色说明：")]),a._v(" "),n("ul",[n("li",[a._v("read ：允许用户读取指定数据库")]),a._v(" "),n("li",[a._v("readWrite ：允许用户读写指定数据库")]),a._v(" "),n("li",[a._v("dbAdmin ：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问 "),n("code",[a._v("system.profile")])]),a._v(" "),n("li",[a._v("userAdmin ：允许用户向 "),n("code",[a._v("system.users")]),a._v(" 集合写入，可以找指定数据库里创建、删除和管理用户")]),a._v(" "),n("li",[a._v("clusterAdmin ：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限")]),a._v(" "),n("li",[a._v("readAnyDatabase ：只在admin数据库中可用，赋予用户所有数据库的读权限")]),a._v(" "),n("li",[a._v("readWriteAnyDatabase ：只在admin数据库中可用，赋予用户所有数据库的读写权限")]),a._v(" "),n("li",[a._v("userAdminAnyDatabase ：只在admin数据库中可用，赋予用户所有数据库的 userAdmin 权限")]),a._v(" "),n("li",[a._v("dbAdminAnyDatabase ：只在admin数据库中可用，赋予用户所有数据库的 dbAdmin 权限")]),a._v(" "),n("li",[a._v("root ：只在 admin 数据库中可用。超级账号，超级权限")])])]),a._v(" "),n("p",[n("strong",[a._v("2、开启安全认证")])]),a._v(" "),n("p",[a._v("编辑 "),n("code",[a._v("mongodb.conf")]),a._v(" 配置文件，增加 "),n("code",[a._v("auth=true")]),a._v(" 配置项。")]),a._v(" "),n("p",[n("strong",[a._v("3、重启")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 查找 MongoDB 进程，并关闭它\n$ ps -ef | grep mongodb\n$ kill 2382 # 假设我们找到的 MongoDB 进程号为 2382 。\n\n# 启动 MongoDB 进程\n$ bin/mongod -f mongodb.conf\n")])])]),n("p",[n("strong",[a._v("4、认证")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 连接 MongoDB\n$ bin/mongo\n\n# 切换到 admin 库\n> use admin;\n\n# 查看 collection 列表，此时会报错\n> show collections;\nWarning: unable to run listCollections, attempting to approximate collection names by parsing connectionStatus\n\n# 认证\n> db.auth('useradmin', 'adminpassword');\n\n# 查看 collection 列表，此时正常\n> show collections;\n")])])]),n("h1",{attrs:{id:"_3-创建数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建数据库"}},[a._v("#")]),a._v(" 3. 创建数据库")]),a._v(" "),n("p",[a._v("本小节，我们来创建一个数据库，并创建对应的账号密码。")]),a._v(" "),n("p",[n("strong",[a._v("1、创建数据库")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("# 连接 MongoDB\n$ bin/mongo\n\n# 切换到 admin 库\n> use admin;\n\n# 管理员认证\n> db.auth('useradmin', 'adminpassword');\n\n# 创建数据库\n> use yourdatabase;\n")])])]),n("ul",[n("li",[n("code",[a._v("use DATABASE_NAME")]),a._v(" 指令：如果数据库不存在，则创建数据库，否则切换到指定数据库。")])]),a._v(" "),n("p",[n("strong",[a._v("2、创建账号密码")])]),a._v(" "),n("p",[a._v("继续上面的 MongoDB Shell 。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('# 创建 yourdatabase 的管理员的账号密码\n> db.createUser({ user: "test01", pwd: "password01", roles: [{ role: "dbOwner", db:"yourdatabase" }] })\n\n# 创建 yourdatabase 的开发者的账号密码\ndb.createUser({ user: "test01", pwd: "test02", roles: [{ role: "readWrite",db: "yourdatabase" }] })\n')])])]),n("ul",[n("li",[a._v("对于每个数据库的管理员账号，我们赋予 "),n("code",[a._v('"dbOwner"')]),a._v(" 角色，允许读写、索引等操作。")]),a._v(" "),n("li",[a._v("对于每个数据库的开发者账号，我们赋予 "),n("code",[a._v('"readWrite"')]),a._v(" 角色，只允许读写操作。")])]),a._v(" "),n("h1",{attrs:{id:"_4-图形化客户端"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-图形化客户端"}},[a._v("#")]),a._v(" 4. 图形化客户端")]),a._v(" "),n("p",[a._v("目前，MongoDB 的图形化客户端已经很多了，例如说：")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://studio3t.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Studio 3T"),n("OutboundLink")],1)]),a._v(" "),n("li",[n("a",{attrs:{href:"https://robomongo.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Robomongo"),n("OutboundLink")],1)]),a._v(" "),n("li",[n("a",{attrs:{href:"https://navicat.com/en/products/navicat-for-mongodb",target:"_blank",rel:"noopener noreferrer"}},[a._v("Navicat for MongoDB"),n("OutboundLink")],1)])]),a._v(" "),n("p",[a._v("艿艿自己的话，使用 Studio 3T 为主，个人版免费。")])])}),[],!1,null,null,null);n.default=o.exports}}]);